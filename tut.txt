pacman -S python-pip python2-pip
pip2 install django

source env/bin/activate
django-admin.py startproject flickr .

python manage.py migrate  # Inicializa base de datos
python manage.py runserver

# Crea app
python manage.py startapp photos

# Escribir código en views y url



# Un paquete es un directorío con el __init__.py
# urls.py -> Declara las url disponibles
# settings.py -> Configuraciones de django
#             -> Secret_key (Encripta contraseñas de los usuarios)

# MVC -> MCT
# Controlador -> Vista
# Vista -> Template

# Modelo -> Representa entidades
# Vista/Template -> Representa los datos que el controlador le indica
# Controlador/Vista -> Comunica Modelo y controlador

# A través de la URL indicamos que controlador hace cada cosas

# Cualquier modificación al modelo -> Migración
# Añadir aplicación en settings.py (Siempre)
python2 manage.py makemigrations
  # Genera unos archivos de migración
python2 manage.py migrate
  # Migra
  # Registrarlo en admin.py
python2 manage.py createsuperuser
  # Desactivar validators en settings

# Django hace un lazy get de la base de datos, no las coje hasta que no las uso

# Capturamos la parte que nos interesa con el nombre var
url(r'^photos/(?P<var>[0-9]+)$')

##
# ¿Que es un middleware?
#

Select related -> Prefetch Related